
target/x86_64-reenix/debug/reenix:     file format elf64-x86-64
target/x86_64-reenix/debug/reenix
architecture: i386:x86-64, flags 0x00000002:
EXEC_P
start address 0x00000000c0101000

Program Header:
    LOAD off    0x0000000000000158 vaddr 0x0000000000100000 paddr 0x0000000000100000 align 2**3
         filesz 0x0000000000000018 memsz 0x0000000000000018 flags r--
    LOAD off    0x0000000000000170 vaddr 0x00000000c0101000 paddr 0x0000000000101000 align 2**2
         filesz 0x00000000000000b8 memsz 0x00000000000000b8 flags r-x
    LOAD off    0x0000000000000228 vaddr 0x00000000c0102000 paddr 0x0000000000102000 align 2**0
         filesz 0x000000000000001a memsz 0x000000000000001a flags r--
    LOAD off    0x0000000000000000 vaddr 0x00000000c0103000 paddr 0x0000000000103000 align 2**12
         filesz 0x0000000000000000 memsz 0x0000000000004000 flags rw-
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**0
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .multiboot    00000018  0000000000100000  0000000000100000  00000158  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000000b8  00000000c0101000  0000000000101000  00000170  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000001a  00000000c0102000  0000000000102000  00000228  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .data         00000000  00000000c0103000  00000000c0103000  00000242  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .bss          00004000  00000000c0103000  0000000000103000  00001000  2**12
                  ALLOC
  5 .comment      00000048  0000000000000000  0000000000000000  00000242  2**0
                  CONTENTS, READONLY
  6 .gnu_debuglink 00000014  0000000000000000  0000000000000000  0000028c  2**2
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 7y45l0ql00lg52or22db1okfc
00000000c0000000 l       *ABS*	0000000000000000 KERNEL_OFFSET
0000000000001000 l       *ABS*	0000000000000000 KERNEL_STACK_SIZE
0000000000107000 l       .bss	0000000000000000 KERNEL_STACK_START_PA
00000000c0107000 l       .bss	0000000000000000 __kernel_stack_start
0000000000103000 l       .bss	0000000000000000 PML4_PA
00000000c0103000 l       .bss	0000000000000000 pml4
0000000000104000 l       .bss	0000000000000000 PDPT_PA
00000000c0104000 l       .bss	0000000000000000 pdpt
0000000000105000 l       .bss	0000000000000000 PDT_PA
00000000c0105000 l       .bss	0000000000000000 pdt
00000000c0106000 l       .bss	0000000000000000 __kernel_stack_end
00000000c0102000 l       .rodata	0000000000000000 gdt64
00000000c0102010 l       .rodata	0000000000000000 gdt64_pointer
00000000c0101023 l       .text	0000000000000000 setup_page_tables
00000000c0101064 l       .text	0000000000000000 enable_paging
00000000c01010b3 l       .text	0000000000000000 _start64
00000000c0101047 l       .text	0000000000000000 .map_pdt
00000000c010108f l       .text	0000000000000000 error
0000000000000000 l    df *ABS*	0000000000000000 e0b617p6pof1uag4o4lykuk0x
0000000000100000 g     O .multiboot	0000000000000018 MULTIBOOT2_HEADER
00000000c0101000 g       .text	0000000000000000 _start
0000000000100000 g       *ABS*	0000000000000000 KERNEL_PMA
00000000c0000000 g       *ABS*	0000000000000000 KERNEL_VMA
00000000c0100018 g       .multiboot	0000000000000000 __kernel_start
00000000c0100018 g       .multiboot	0000000000000000 __text_start
00000000c01010b8 g       .text	0000000000000000 __text_end
00000000c01010b8 g       .text	0000000000000000 __rodata_start
00000000c010201a g       .rodata	0000000000000000 __rodata_end
00000000c010201a g       .rodata	0000000000000000 __data_start
00000000c0103000 g       .data	0000000000000000 __data_end
00000000c0103000 g       .data	0000000000000000 __bss_start
00000000c0107000 g       .bss	0000000000000000 __bss_end
00000000c0107000 g       .bss	0000000000000000 __kernel_end



Disassembly of section .multiboot:

0000000000100000 <MULTIBOOT2_HEADER>:
  100000:	d6                   	(bad)  
  100001:	50                   	push   %eax
  100002:	52                   	push   %edx
  100003:	e8 00 00 00 00       	call   100008 <MULTIBOOT2_HEADER+0x8>
  100008:	18 00                	sbb    %al,(%eax)
  10000a:	00 00                	add    %al,(%eax)
  10000c:	12 af ad 17 00 00    	adc    0x17ad(%edi),%ch
  100012:	00 00                	add    %al,(%eax)
  100014:	08 00                	or     %al,(%eax)
	...

Disassembly of section .text:

00000000c0101000 <_start>:
    c0101000:	fa                   	cli    
    c0101001:	bc 00 70 10 00       	mov    $0x107000,%esp
    c0101006:	bd 00 70 10 00       	mov    $0x107000,%ebp
    c010100b:	e8 13 00 00 00       	call   c0101023 <setup_page_tables>
    c0101010:	e8 4f 00 00 00       	call   c0101064 <enable_paging>
    c0101015:	0f 01 15 10 20 10 c0 	lgdtl  0xc0102010
    c010101c:	ea b3 10 10 c0 08 00 	ljmp   $0x8,$0xc01010b3

00000000c0101023 <setup_page_tables>:
    c0101023:	b8 00 40 10 00       	mov    $0x104000,%eax
    c0101028:	83 c8 03             	or     $0x3,%eax
    c010102b:	a3 00 30 10 00       	mov    %eax,0x103000
    c0101030:	b8 00 50 10 00       	mov    $0x105000,%eax
    c0101035:	83 c8 03             	or     $0x3,%eax
    c0101038:	a3 00 40 10 00       	mov    %eax,0x104000
    c010103d:	a3 18 40 10 00       	mov    %eax,0x104018
    c0101042:	b9 00 00 00 00       	mov    $0x0,%ecx

00000000c0101047 <.map_pdt>:
    c0101047:	b8 00 00 20 00       	mov    $0x200000,%eax
    c010104c:	f7 e1                	mul    %ecx
    c010104e:	0d 83 00 00 00       	or     $0x83,%eax
    c0101053:	89 04 cd 00 50 10 00 	mov    %eax,0x105000(,%ecx,8)
    c010105a:	41                   	inc    %ecx
    c010105b:	81 f9 00 02 00 00    	cmp    $0x200,%ecx
    c0101061:	75 e4                	jne    c0101047 <.map_pdt>
    c0101063:	c3                   	ret    

00000000c0101064 <enable_paging>:
    c0101064:	b8 00 30 10 00       	mov    $0x103000,%eax
    c0101069:	0f 22 d8             	mov    %eax,%cr3
    c010106c:	0f 20 e0             	mov    %cr4,%eax
    c010106f:	83 c8 20             	or     $0x20,%eax
    c0101072:	0f 22 e0             	mov    %eax,%cr4
    c0101075:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
    c010107a:	0f 32                	rdmsr  
    c010107c:	0d 00 01 00 00       	or     $0x100,%eax
    c0101081:	0f 30                	wrmsr  
    c0101083:	0f 20 c0             	mov    %cr0,%eax
    c0101086:	0d 00 00 00 80       	or     $0x80000000,%eax
    c010108b:	0f 22 c0             	mov    %eax,%cr0
    c010108e:	c3                   	ret    

00000000c010108f <error>:
    c010108f:	c7 05 00 80 0b 00 45 	movl   $0x4f524f45,0xb8000
    c0101096:	4f 52 4f 
    c0101099:	c7 05 04 80 0b 00 52 	movl   $0x4f3a4f52,0xb8004
    c01010a0:	4f 3a 4f 
    c01010a3:	c7 05 08 80 0b 00 20 	movl   $0x4f204f20,0xb8008
    c01010aa:	4f 20 4f 
    c01010ad:	a2 0a 80 0b 00       	mov    %al,0xb800a
    c01010b2:	f4                   	hlt    

00000000c01010b3 <_start64>:
    c01010b3:	e8 d7 ff ff ff       	call   c010108f <error>

Disassembly of section .rodata:

00000000c0102000 <gdt64>:
	...
    c010200c:	00 98 20 00      	add    %bl,0xf0020(%eax)

00000000c0102010 <gdt64_pointer>:
    c0102010:	0f 00 00             	sldt   (%eax)
    c0102013:	20 10                	and    %dl,(%eax)
    c0102015:	c0 00 00             	rolb   $0x0,(%eax)
	...

Disassembly of section .bss:

00000000c0103000 <pml4>:
	...

00000000c0104000 <pdpt>:
	...

00000000c0105000 <pdt>:
	...

00000000c0106000 <__kernel_stack_end>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	4c                   	dec    %esp
   1:	69 6e 6b 65 72 3a 20 	imul   $0x203a7265,0x6b(%esi),%ebp
   8:	4c                   	dec    %esp
   9:	4c                   	dec    %esp
   a:	44                   	inc    %esp
   b:	20 31                	and    %dh,(%ecx)
   d:	38 2e                	cmp    %ch,(%esi)
   f:	31 2e                	xor    %ebp,(%esi)
  11:	37                   	aaa    
  12:	00 00                	add    %al,(%eax)
  14:	72 75                	jb     8b <KERNEL_STACK_SIZE-0xf75>
  16:	73 74                	jae    8c <KERNEL_STACK_SIZE-0xf74>
  18:	63 20                	arpl   %sp,(%eax)
  1a:	76 65                	jbe    81 <KERNEL_STACK_SIZE-0xf7f>
  1c:	72 73                	jb     91 <KERNEL_STACK_SIZE-0xf6f>
  1e:	69 6f 6e 20 31 2e 38 	imul   $0x382e3120,0x6e(%edi),%ebp
  25:	31 2e                	xor    %ebp,(%esi)
  27:	30 2d 6e 69 67 68    	xor    %ch,0x6867696e
  2d:	74 6c                	je     9b <KERNEL_STACK_SIZE-0xf65>
  2f:	79 20                	jns    51 <KERNEL_STACK_SIZE-0xfaf>
  31:	28 36                	sub    %dh,(%esi)
  33:	38 34 62             	cmp    %dh,(%edx,%eiz,2)
  36:	33 35 35 33 66 20    	xor    0x20663335,%esi
  3c:	32 30                	xor    (%eax),%dh
  3e:	32 34 2d 30 36 2d 32 	xor    0x322d3630(,%ebp,1),%dh
  45:	30 29                	xor    %ch,(%ecx)
	...

Disassembly of section .gnu_debuglink:

0000000000000000 <.gnu_debuglink>:
   0:	72 65                	jb     67 <KERNEL_STACK_SIZE-0xf99>
   2:	65 6e                	outsb  %gs:(%esi),(%dx)
   4:	69 78 2e 64 65 62 75 	imul   $0x75626564,0x2e(%eax),%edi
   b:	67 00 00             	add    %al,(%bx,%si)
   e:	00 00                	add    %al,(%eax)
  10:	5a                   	pop    %edx
  11:	15                   	.byte 0x15
  12:	e3 d5                	jecxz  ffffffe9 <__bss_end+0x3fef8fe9>
